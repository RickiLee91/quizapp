const startButton = document.getElementById("start-btn");
const resultImage = document.getElementById("result-img");
const resultRecommendation = document.getElementById("percentage-result");
const nextButton = document.getElementById("next-btn");
const questionContainerElement = document.getElementById("question-container");
const questionElement = document.getElementById("question");
const answerButtonsElement = document.getElementById("answer-buttons");
const resultForm = document.getElementById("form-result");
const startImage = document.getElementById("start-image");
const wrong = new Audio('./assets/sounds/[INSERT WRONG ANSWER SOUND.mp3]');
wrong.loop = false;
const right = new Audio('./assets/sounds/[INSERT CORRECT ANSWER SOUND.mp3]');
right.loop = false;

let countRightAnswers = 0;
let shuffledQuestions, currentQuestionIndex;
let currentQuestion = 1;

$window = $(window);
$htmlbody = $('html,body');
$slide = $('.homeSlide');
$body = $('body');

adjustWindow();

function adjustWindow() {

  let s = skrollr.init();
  winH = $window.height();
  if (winH <= 550) {
    winH = 550;
  }

  $slide.height(winH * 2);
  $('#slide-2, #slide-3').height(winH * 3);

  s.refresh($('.homeSlide'));

}

startButton.addEventListener("click", startGame);
nextButton.addEventListener("click", () => {
  document.getElementById("answer-buttons").classList.remove("no-click");
  currentQuestionIndex++;
  setNextQuestion();

  currentQuestion++;
  document.getElementById("current-question").innerHTML = currentQuestion;
});

// what happens when you click 'start' or 'try again' buttons
function startGame() {

// if restarting then this stops the confetti

  stopConfetti();


  document.getElementById("answer-buttons").classList.remove("no-click");

  startButton.classList.add("hide");
  resultForm.classList.add("hide");
  // shuffles the order of questions
  shuffledQuestions = questions.sort(() => Math.random() - 0.5);
  currentQuestionIndex = 0;
  questionContainerElement.classList.remove("hide");
  setNextQuestion();

  currentQuestion = 1;
  document.getElementById("current-question").innerHTML = currentQuestion;

  //  resets the counter if the quiz restarts
  countRightAnswers = 0;

  document.getElementById("all-questions2").innerHTML = questions.length;
  document.getElementById("all-questions").innerHTML = questions.length;
}

// for images within the quiz
function hideImage() {
  startImage.classList.add("hide");
}

// what happens when you click on 'next' button
function setNextQuestion() {
  resetState();
  showQuestion(shuffledQuestions[currentQuestionIndex]);
}
// shows question
function showQuestion(question) {
  questionElement.innerText = question.question;
 
  // populate answers
  question.answers.forEach((answer) => {
    // create button for each answer
    const button = document.createElement("button");
    button.innerText = answer.text;

    // to add images to answers 
    if (answer.isImage) {
      button.classList.add('image-question')
      answerButtonsElement.classList.add('image-wrapper');
    } else {
      answerButtonsElement.classList.remove('image-wrapper');
    }

    button.style.backgroundImage = answer.image;
    button.classList.add("btn");
    // check if answer is correct
    if (answer.correct) {
      // adding 'correct' data attribute
      button.dataset.correct = answer.correct;
    }
    button.addEventListener("click", selectAnswer);
    answerButtonsElement.appendChild(button);
  });
}

function resetState() {
  clearStatusClass(document.body);
  nextButton.classList.add("hide");
  while (answerButtonsElement.firstChild) {
    answerButtonsElement.removeChild(answerButtonsElement.firstChild);
  }
}

// what happens when an answer is selected
function selectAnswer(e) {
  const selectedButton = e.target;
  const correct = selectedButton.dataset.correct;
  setStatusClass(document.body, correct);
  Array.from(answerButtonsElement.children).forEach((button) => {
    setStatusClass(button, button.dataset.correct);
  });
  // if there are more questions, show 'next' button
  if (shuffledQuestions.length > currentQuestionIndex + 1) {
    nextButton.classList.remove("hide");

    // if no more questions, show 'restart' button and results
  } else {
    resultForm.classList.remove("hide");
    questionContainerElement.classList.add("hide");
    startButton.innerText = "Try Again?";
    startButton.classList.remove("hide");
  }

  // if correct answer is selected, add a point and toggle confetti
  if ((selectedButton.dataset = correct)) {
    right.play();
    toggleConfetti();
    setTimeout(function () {
      toggleConfetti();
    }, 1000);
    countRightAnswers++;
  } else {
    wrong.play();
  }


  // if final score is above 80%, start endless confetti

  if (currentQuestion === 20 && countRightAnswers > 16) {
    startConfetti();
  }



  let percentageResult = (
    (100 * countRightAnswers) /
    questions.length
  ).toFixed(0);

  // changes the result image and message depending on final score

  if (percentageResult <= 15) {
    resultImage.src = "INSERT IMAGE FOR LOW SCORE"
    resultRecommendation.innerText = "INSERT MESSAGE FOR LOW SCORE";
  } else if (percentageResult > 15 && percentageResult < 50) {
    resultImage.src = "INSERT IMAGE FOR AVERAGE SCORE"
    resultRecommendation.innerText = "INSERT MESSAGE FOR AVERAGE SCORE";
  } else if (percentageResult > 50 && percentageResult < 85) {
    resultImage.src = "INSERT IMAGE FOR GOOD SCORE"
    resultRecommendation.innerText = "INSERT MESSAGE FOR GOOD SCORE";
  } else {
    resultImage.src = "INSWERT IMAGE FOR HIGH SCORE"
    resultRecommendation.innerText = "INSERT MESSAGE FOR HIGH SCORE";
  }

  // display the score
  document.getElementById("right-answers").innerHTML = countRightAnswers;
  document.getElementById("answers-percent").innerHTML = (
    (100 * countRightAnswers) /
    questions.length
  ).toFixed(0);

  // prevent multiclicking
  document.getElementById("answer-buttons").classList.add("no-click");
}

//   sets status of each answer/button as correct or false
function setStatusClass(element, correct) {
  clearStatusClass(element);
  if (correct) {
    element.classList.add("correct");
  } else {
    element.classList.add("wrong");
  }
}

function clearStatusClass(element) {
  element.classList.remove("correct");
  element.classList.remove("wrong");
}

const questions = [
  {
    question: "INSERT QUESTION (WITH IMAGES FOR ANSWERS) HERE",
    answers: [
      { text: ' ', image: 'url("INSERT IMAGE URL")', isImage: true, correct: false },
      { text: ' ', image: 'url("INSERT IMAGE URL")', isImage: true, correct: true },
      { text: ' ', image: 'url("INSERT IMAGE URL")', isImage: true, correct: false },
      { text: ' ', image: 'url("INSERT IMAGE URL")', isImage: true, correct: false },
    ],
  },
  {
    question: "INSERT QUESTION (WITH TEXT FOR ANSWERS) HERE",
    answers: [
      { text: "INSERT TEXT ANSWER", correct: false },
      { text: "INSERT TEXT ANSWER", correct: true },
      { text: "INSERT TEXT ANSWER", correct: false },
      { text: "INSERT TEXT ANSWER", correct: false },
    ],
  },
];

